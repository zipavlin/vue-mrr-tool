{"version":3,"sources":["webpack://MrrTool/webpack/universalModuleDefinition","webpack://MrrTool/webpack/bootstrap","webpack://MrrTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/lib/listToStyles.js","webpack://MrrTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/lib/addStylesClient.js","webpack://MrrTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://MrrTool/./src/MrrTool.vue?24f9","webpack://MrrTool/./src/MrrTool.vue?cc4c","webpack://MrrTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/lib/css-base.js","webpack://MrrTool/./src/MrrTool.vue?6919","webpack://MrrTool/src/MrrTool.vue","webpack://MrrTool/./src/MrrTool.vue?76fc","webpack://MrrTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://MrrTool/./src/MrrTool.vue","webpack://MrrTool/./src/MrrTool.vue?f319","webpack://MrrTool/./node_modules/hammerjs/hammer.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","listToStyles","parentId","list","styles","newStyles","length","item","id","css","media","sourceMap","part","parts","push","__webpack_exports__","addStylesClient","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","type","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","replaceText","textStore","index","replacement","filter","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","window","currentScript","src","match","content","locals","add","default","shadowMode","cssWithMappingToString","useSourceMap","cssMapping","sourceMapping","toComment","sourceURLs","map","source","sourceRoot","concat","base64","data","toString","mediaQuery","alreadyImportedModules","render","_vm","_h","$createElement","_c","_self","ref","staticClass","style","attrs","data-action","action","data-in-progress","inProgress","width","wrapWidth","height","wrapHeight","viewBox","mOptions","cx","outerRadius","cy","isMobile","_e","rotate","resizeSize","strokeWidth","fill","x","paddingLeft","y","paddingTop","on","contextmenu","onContextMenu","resize","padding","rotateSize","text-anchor","dy","stroke","_v","_s","staticRenderFns","_getAngle","e","rect","center","left","top","Math","atan2","clientY","clientX","PI","MrrToolvue_type_script_lang_js","props","angle","[object Object]","prevAngle","realAngle","prevDeltaX","prevDeltaY","rotation","managers","substr","computed","assign","move","sqrt","pow","recognizers","hammer_default","a","Pan","direction","DIRECTION_ALL","Pinch","Press","moveResizeManager","Manager","$refs","deltaX","srcEvent","movementX","deltaY","movementY","newValue","$emit","addPanListener","rotateMobile","resizeTopLeft","invertX","invertY","resizeTop","resizeTopRight","resizeRight","resizeBottomRight","resizeBottom","resizeBottomLeft","resizeLeft","rotateTopLeft","rotateTopRight","rotateBottomLeft","rotateBottomRight","forEach","manager","element","addEventListener","hoverStart","hoverEnd","removeListeners","methods","changes","mrr","getBoundingClientRect","deltaAngle","newAngle","shiftKey","tmpAngle","round","handler","handlers","destroy","$listeners","preventDefault","src_MrrToolvue_type_script_lang_js","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","MrrTool","_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_css_loader_index_js_ref_8_oneOf_1_1_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_cache_loader_dist_cjs_js_ref_0_0_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_MrrTool_vue_vue_type_style_index_0_id_302d7bf8_scoped_true_lang_scss__WEBPACK_IMPORTED_MODULE_0___default","__WEBPACK_AMD_DEFINE_RESULT__","exportName","undefined","VENDOR_PREFIXES","TEST_ELEMENT","TYPE_FUNCTION","abs","now","Date","setTimeoutContext","fn","timeout","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","iterator","deprecate","method","message","deprecationMessage","stack","replace","log","console","warn","apply","arguments","target","TypeError","output","nextKey","extend","dest","merge","keys","inherit","child","base","properties","childP","baseP","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","removeEventListener","hasParent","node","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","b","prefixed","prefix","prop","camelProp","toUpperCase","_uniqueId","uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","PROPS_XY","PROPS_CLIENT_XY","Input","callback","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","PointerEventInput","TouchInput","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","getCenter","timeStamp","deltaTime","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","getScale","getRotation","maxPointers","computeIntervalInputData","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","last","lastInterval","v","p1","p2","start","end","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","isSyntheticEvent","dx","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","TouchAction","set","cleanTouchActions","actions","hasPanX","hasPanY","touchMap","cssSupports","CSS","supports","compute","touchAction","recognizer","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","oldCssProps","toggleCssProps","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","stop","force","stopped","curRecognizer","events","off","Tap","Swipe","Rotate","freeGlobal"],"mappings":"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","file":"MrrTool.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MrrTool\"] = factory();\n\telse\n\t\troot[\"MrrTool\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"dOjU\");\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  let i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./MrrTool.vue?vue&type=style&index=0&id=302d7bf8&scoped=true&lang=scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e493b0c4\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","exports = module.exports = require(\"../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mrr-tool[data-v-302d7bf8]{position:absolute;display:block;stroke:aqua;touch-action:none}.mrr-tool-move[data-v-302d7bf8]{cursor:move;transition:opacity .25s}.mrr-tool-resize[data-v-302d7bf8]{transition:opacity .25s}.mrr-tool-resize.resize-diagonal.nwse[data-v-302d7bf8]{cursor:nwse-resize}.mrr-tool-resize.resize-diagonal.nesw[data-v-302d7bf8]{cursor:nesw-resize}.mrr-tool-resize.resize-vertical[data-v-302d7bf8]{cursor:ns-resize}.mrr-tool-resize.resize-horizontal[data-v-302d7bf8]{cursor:ew-resize}.mrr-tool-rotate[data-v-302d7bf8]{cursor:move;transition:opacity .25s}.mrr-tool-rotate.guide[data-v-302d7bf8]{opacity:.2;stroke-dasharray:2px,6px;transition:stroke-dasharray .25s,opacity .25s}.mrr-tool-action[data-v-302d7bf8]{text-transform:uppercase;pointer-events:none}.mrr-tool[data-action=rotate] .mrr-tool-rotate.guide[data-v-302d7bf8]{opacity:.4;stroke-dasharray:2px,2px}.mrr-tool[data-action=rotate] .mrr-tool-move[data-v-302d7bf8],.mrr-tool[data-action=rotate] .mrr-tool-resize[data-v-302d7bf8]{opacity:.4}.mrr-tool[data-action=rotate][data-in-progress=true] .mrr-tool-rotate.guide[data-v-302d7bf8]{opacity:.8}.mrr-tool[data-action=rotate][data-in-progress=true] .mrr-tool-move[data-v-302d7bf8]{opacity:.2}.mrr-tool[data-action=rotate][data-in-progress=true] .mrr-tool-resize[data-v-302d7bf8]{opacity:0}.mrr-tool[data-action=move] .mrr-tool-resize[data-v-302d7bf8],.mrr-tool[data-action=move] .mrr-tool-rotate[data-v-302d7bf8]{opacity:.4}.mrr-tool[data-action=move][data-in-progress=true] .mrr-tool-resize[data-v-302d7bf8],.mrr-tool[data-action=move][data-in-progress=true] .mrr-tool-rotate[data-v-302d7bf8]:not(.guide){opacity:0}.mrr-tool[data-action=resize] .mrr-tool-move[data-v-302d7bf8],.mrr-tool[data-action=resize] .mrr-tool-rotate[data-v-302d7bf8]{opacity:.4}.mrr-tool[data-action=resize][data-in-progress=true] .mrr-tool-rotate[data-v-302d7bf8]{opacity:0}.mrr-tool[data-action=resize][data-in-progress=true] .mrr-tool-move[data-v-302d7bf8]{opacity:.2}.fade-enter-active[data-v-302d7bf8],.fade-leave-active[data-v-302d7bf8]{transition:opacity .5s}.fade-enter[data-v-302d7bf8],.fade-leave-to[data-v-302d7bf8]{opacity:0}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{ref:\"mrr\",staticClass:\"mrr-tool\",style:(_vm.style),attrs:{\"data-action\":_vm.action,\"data-in-progress\":_vm.inProgress,\"width\":_vm.wrapWidth,\"height\":_vm.wrapHeight,\"viewBox\":_vm.viewBox}},[(_vm.mOptions.rotate)?_c('circle',{staticClass:\"mrr-tool-rotate guide\",attrs:{\"cx\":_vm.outerRadius,\"cy\":_vm.outerRadius,\"r\":_vm.outerRadius - (_vm.isMobile ? (_vm.mOptions.resizeSize) : 0)}}):_vm._e(),(_vm.isMobile && _vm.mOptions.rotate)?_c('circle',{ref:\"rotateMobile\",staticClass:\"mrr-tool-rotate\",attrs:{\"cx\":_vm.wrapWidth / 2 - (_vm.mOptions.strokeWidth),\"cy\":_vm.mOptions.resizeSize / 2 + (_vm.mOptions.strokeWidth * 2),\"r\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}):_vm._e(),(_vm.mOptions.move)?_c('rect',{ref:\"move\",staticClass:\"mrr-tool-move\",attrs:{\"x\":_vm.paddingLeft,\"y\":_vm.paddingTop,\"width\":_vm.value.width,\"height\":_vm.value.height},on:{\"contextmenu\":_vm.onContextMenu}}):_vm._e(),(!_vm.isMobile && _vm.mOptions.resize)?_c('g',{staticClass:\"mrr-tool-resize-handles\"},[_c('rect',{ref:\"resizeTopLeft\",staticClass:\"mrr-tool-resize resize-diagonal nwse top-left\",attrs:{\"x\":_vm.paddingLeft - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}),_c('rect',{ref:\"resizeTop\",staticClass:\"mrr-tool-resize resize-vertical top\",attrs:{\"x\":_vm.paddingLeft + (_vm.value.width / 2) - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}),_c('rect',{ref:\"resizeTopRight\",staticClass:\"mrr-tool-resize resize-diagonal nesw top-right\",attrs:{\"x\":_vm.paddingLeft + _vm.value.width - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}),_c('rect',{ref:\"resizeRight\",staticClass:\"mrr-tool-resize resize-horizontal right\",attrs:{\"x\":_vm.paddingLeft + _vm.value.width - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop + (_vm.value.height / 2) - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}),_c('rect',{ref:\"resizeBottomRight\",staticClass:\"mrr-tool-resize resize-diagonal nwse bottom-right\",attrs:{\"x\":_vm.paddingLeft + _vm.value.width - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop + _vm.value.height - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}),_c('rect',{ref:\"resizeBottom\",staticClass:\"mrr-tool-resize resize-vertical bottom\",attrs:{\"x\":_vm.paddingLeft + (_vm.value.width / 2) - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop + _vm.value.height - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}),_c('rect',{ref:\"resizeBottomLeft\",staticClass:\"mrr-tool-resize resize-diagonal nesw bottom-left\",attrs:{\"x\":_vm.paddingLeft - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop + _vm.value.height - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}}),_c('rect',{ref:\"resizeLeft\",staticClass:\"mrr-tool-resize resize-horizontal left\",attrs:{\"x\":_vm.paddingLeft - (_vm.mOptions.resizeSize / 2),\"y\":_vm.paddingTop + (_vm.value.height / 2) - (_vm.mOptions.resizeSize / 2),\"width\":_vm.mOptions.resizeSize,\"height\":_vm.mOptions.resizeSize,\"fill\":_vm.mOptions.fill}})]):_vm._e(),(!_vm.isMobile && _vm.mOptions.rotate)?_c('g',{staticClass:\"mrr-tool-rotate-handles\"},[_c('circle',{ref:\"rotateTopLeft\",staticClass:\"mrr-tool-rotate nesw top-left\",attrs:{\"cx\":_vm.paddingLeft - _vm.mOptions.padding + _vm.mOptions.rotateSize - _vm.mOptions.strokeWidth,\"cy\":_vm.paddingTop - _vm.mOptions.padding + _vm.mOptions.rotateSize + _vm.mOptions.strokeWidth,\"r\":_vm.mOptions.rotateSize,\"fill\":_vm.mOptions.fill}}),_c('circle',{ref:\"rotateTopRight\",staticClass:\"mrr-tool-rotate nwse top-right\",attrs:{\"cx\":(_vm.paddingLeft + _vm.value.width) + _vm.mOptions.padding - _vm.mOptions.rotateSize - (_vm.mOptions.strokeWidth / 2),\"cy\":_vm.paddingTop - _vm.mOptions.padding + _vm.mOptions.rotateSize + (_vm.mOptions.strokeWidth / 2),\"r\":_vm.mOptions.rotateSize,\"fill\":_vm.mOptions.fill}}),_c('circle',{ref:\"rotateBottomRight\",staticClass:\"mrr-tool-rotate nesw bottom-right\",attrs:{\"cx\":(_vm.paddingLeft + _vm.value.width) + _vm.mOptions.padding - (_vm.mOptions.rotateSize + _vm.mOptions.strokeWidth),\"cy\":(_vm.paddingTop + _vm.value.height) + _vm.mOptions.padding - (_vm.mOptions.rotateSize + _vm.mOptions.strokeWidth),\"r\":_vm.mOptions.rotateSize,\"fill\":_vm.mOptions.fill}}),_c('circle',{ref:\"rotateBottomLeft\",staticClass:\"mrr-tool-rotate nwse bottom-left\",attrs:{\"cx\":_vm.paddingLeft - _vm.mOptions.padding + (_vm.mOptions.rotateSize + (_vm.mOptions.strokeWidth / 2)),\"cy\":(_vm.paddingTop + _vm.value.height) + _vm.mOptions.padding - (_vm.mOptions.rotateSize + (_vm.mOptions.strokeWidth / 2)),\"r\":_vm.mOptions.rotateSize,\"fill\":_vm.mOptions.fill}})]):_vm._e(),(_vm.mOptions.action)?_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.action !== null)?_c('text',{staticClass:\"mrr-tool-action\",attrs:{\"text-anchor\":\"middle\",\"x\":_vm.wrapWidth / 2,\"y\":_vm.wrapHeight / 2,\"dy\":\"7\",\"stroke\":\"none\",\"fill\":_vm.mOptions.stroke}},[_vm._v(_vm._s(_vm.action))]):_vm._e()]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <svg class=\"mrr-tool\" ref=\"mrr\" :data-action=\"action\" :data-in-progress=\"inProgress\" :width=\"wrapWidth\" :height=\"wrapHeight\" :viewBox=\"viewBox\" :style=\"style\">\r\n        <!-- rotate guide -->\r\n        <circle class=\"mrr-tool-rotate guide\" v-if=\"mOptions.rotate\" :cx=\"outerRadius\" :cy=\"outerRadius\" :r=\"outerRadius - (isMobile ? (mOptions.resizeSize) : 0)\"></circle>\r\n        <circle class=\"mrr-tool-rotate\" v-if=\"isMobile && mOptions.rotate\" :cx=\"wrapWidth / 2 - (mOptions.strokeWidth)\" :cy=\"mOptions.resizeSize / 2 + (mOptions.strokeWidth * 2)\" :r=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"rotateMobile\"></circle>\r\n        <!-- move handle -->\r\n        <rect class=\"mrr-tool-move\" v-if=\"mOptions.move\" ref=\"move\" :x=\"paddingLeft\" :y=\"paddingTop\" :width=\"value.width\" :height=\"value.height\" @contextmenu=\"onContextMenu\"></rect>\r\n        <!-- resize handles -->\r\n        <g class=\"mrr-tool-resize-handles\" v-if=\"!isMobile && mOptions.resize\">\r\n            <rect class=\"mrr-tool-resize resize-diagonal nwse top-left\" :x=\"paddingLeft - (mOptions.resizeSize / 2)\" :y=\"paddingTop - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeTopLeft\"></rect>\r\n            <rect class=\"mrr-tool-resize resize-vertical top\" :x=\"paddingLeft + (value.width / 2) - (mOptions.resizeSize / 2)\" :y=\"paddingTop - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeTop\"></rect>\r\n            <rect class=\"mrr-tool-resize resize-diagonal nesw top-right\" :x=\"paddingLeft + value.width - (mOptions.resizeSize / 2)\" :y=\"paddingTop - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeTopRight\"></rect>\r\n            <rect class=\"mrr-tool-resize resize-horizontal right\" :x=\"paddingLeft + value.width - (mOptions.resizeSize / 2)\" :y=\"paddingTop + (value.height / 2) - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeRight\"></rect>\r\n            <rect class=\"mrr-tool-resize resize-diagonal nwse bottom-right\" :x=\"paddingLeft + value.width - (mOptions.resizeSize / 2)\" :y=\"paddingTop + value.height - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeBottomRight\"></rect>\r\n            <rect class=\"mrr-tool-resize resize-vertical bottom\" :x=\"paddingLeft + (value.width / 2) - (mOptions.resizeSize / 2)\" :y=\"paddingTop + value.height - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeBottom\"></rect>\r\n            <rect class=\"mrr-tool-resize resize-diagonal nesw bottom-left\" :x=\"paddingLeft - (mOptions.resizeSize / 2)\" :y=\"paddingTop + value.height - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeBottomLeft\"></rect>\r\n            <rect class=\"mrr-tool-resize resize-horizontal left\" :x=\"paddingLeft - (mOptions.resizeSize / 2)\" :y=\"paddingTop + (value.height / 2) - (mOptions.resizeSize / 2)\" :width=\"mOptions.resizeSize\" :height=\"mOptions.resizeSize\" :fill=\"mOptions.fill\" ref=\"resizeLeft\"></rect>\r\n        </g>\r\n        <!-- rotate handles -->\r\n        <g class=\"mrr-tool-rotate-handles\" v-if=\"!isMobile && mOptions.rotate\">\r\n            <circle class=\"mrr-tool-rotate nesw top-left\" :cx=\"paddingLeft - mOptions.padding + mOptions.rotateSize - mOptions.strokeWidth\" :cy=\"paddingTop - mOptions.padding + mOptions.rotateSize + mOptions.strokeWidth\" :r=\"mOptions.rotateSize\" :fill=\"mOptions.fill\" ref=\"rotateTopLeft\"></circle>\r\n            <circle class=\"mrr-tool-rotate nwse top-right\" :cx=\"(paddingLeft + value.width) + mOptions.padding - mOptions.rotateSize - (mOptions.strokeWidth / 2)\" :cy=\"paddingTop - mOptions.padding + mOptions.rotateSize + (mOptions.strokeWidth / 2)\" :r=\"mOptions.rotateSize\" :fill=\"mOptions.fill\" ref=\"rotateTopRight\"></circle>\r\n            <circle class=\"mrr-tool-rotate nesw bottom-right\" :cx=\"(paddingLeft + value.width) + mOptions.padding - (mOptions.rotateSize + mOptions.strokeWidth)\" :cy=\"(paddingTop + value.height) + mOptions.padding - (mOptions.rotateSize + mOptions.strokeWidth)\" :r=\"mOptions.rotateSize\" :fill=\"mOptions.fill\" ref=\"rotateBottomRight\"></circle>\r\n            <circle class=\"mrr-tool-rotate nwse bottom-left\" :cx=\"paddingLeft - mOptions.padding + (mOptions.rotateSize + (mOptions.strokeWidth / 2))\" :cy=\"(paddingTop + value.height) + mOptions.padding - (mOptions.rotateSize + (mOptions.strokeWidth / 2))\" :r=\"mOptions.rotateSize\" :fill=\"mOptions.fill\" ref=\"rotateBottomLeft\"></circle>\r\n        </g>\r\n        <!-- action -->\r\n        <transition name=\"fade\" v-if=\"mOptions.action\">\r\n            <text v-if=\"action !== null\" class=\"mrr-tool-action\" text-anchor=\"middle\" :x=\"wrapWidth / 2\" :y=\"wrapHeight / 2\" dy=\"7\" stroke=\"none\" :fill=\"mOptions.stroke\">{{action}}</text>\r\n        </transition>\r\n    </svg>\r\n</template>\r\n\r\n<script>\r\n    import Hammer from 'hammerjs';\r\n\r\n    const _getAngle = (e, rect) => {\r\n        const center = [\r\n            rect.left + (rect.width / 2), // rect.left + (rect.right - rect.left) / 2\r\n            rect.top + (rect.height / 2)\r\n        ];\r\n        return Math.atan2(e.clientY - center[1], e.clientX - center[0]) * 180 / Math.PI + 180;\r\n    };\r\n\r\n    export default {\r\n        name: 'MRRTool',\r\n        props: {\r\n            value: {\r\n                default: () => ({\r\n                    width: 200,\r\n                    height: 200,\r\n                    x: 0,\r\n                    y: 0,\r\n                    angle: 0\r\n                }),\r\n                type: Object\r\n            },\r\n            options: {\r\n                default: () => ({}),\r\n                type: Object\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                prevAngle: 0,\r\n                realAngle: 0,\r\n                prevDeltaX: 0,\r\n                prevDeltaY: 0,\r\n                action: null,\r\n                inProgress: false,\r\n                rotation: false,\r\n                managers: [],\r\n                isMobile: (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4)))\r\n            }\r\n        },\r\n        computed: {\r\n            // mOptions merged from props and default\r\n            mOptions() {\r\n                return Object.assign({\r\n                    padding: 26,\r\n                    stroke: '#00C2FF',\r\n                    strokeWidth: 2,\r\n                    fill: 'white',\r\n                    resizeSize: 10,\r\n                    rotateSize: 6,\r\n                    move: true,\r\n                    resize: true,\r\n                    rotate: true,\r\n                    action: true\r\n                }, this.options);\r\n            },\r\n            // outer radius of rotate guide\r\n            outerRadius() {\r\n                const width = ((this.value.width / 2) + this.mOptions.padding - (this.mOptions.rotateSize + (this.mOptions.strokeWidth / 2)));\r\n                const height = ((this.value.height / 2) + this.mOptions.padding - (this.mOptions.rotateSize + (this.mOptions.strokeWidth / 2)));\r\n                return Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n            },\r\n            // size of wrap\r\n            wrapWidth() {\r\n                let width;\r\n                if (this.mOptions.rotate) {\r\n                    width = (this.outerRadius * 2) + (this.mOptions.strokeWidth * 2);\r\n                } else if (this.mOptions.resize) {\r\n                    width = (this.value.width + this.mOptions.resizeSize + (this.mOptions.strokeWidth * 2));\r\n                } else {\r\n                    width = (this.value.width + (this.mOptions.strokeWidth * 2));\r\n                }\r\n                return width;\r\n            },\r\n            wrapHeight() {\r\n                let height;\r\n                if (this.mOptions.rotate) {\r\n                    height = (this.outerRadius * 2) + (this.mOptions.strokeWidth * 2);\r\n                } else if (this.mOptions.resize) {\r\n                    height = (this.value.height + this.mOptions.resizeSize + (this.mOptions.strokeWidth * 2));\r\n                } else {\r\n                    height = (this.value.height + (this.mOptions.strokeWidth * 2));\r\n                }\r\n                return height;\r\n            },\r\n            // padding left\r\n            paddingLeft() {\r\n                return ((this.wrapWidth - this.value.width) / 2);\r\n            },\r\n            // padding top\r\n            paddingTop() {\r\n                return ((this.wrapHeight - this.value.height) / 2);\r\n            },\r\n            // viebBox attribute for svg element\r\n            viewBox() {\r\n                return this.mOptions.rotate ? `-2 -2 ${this.wrapWidth}, ${this.wrapHeight}` : `0 0 ${this.wrapWidth}, ${this.wrapHeight}`;\r\n            },\r\n            // svg element style\r\n            style() {\r\n                return {\r\n                    top: `-${this.paddingTop}px`,\r\n                    left: `-${this.paddingLeft}px`,\r\n                    stroke: this.mOptions.stroke,\r\n                    strokeWidth: `${this.mOptions.strokeWidth}px`,\r\n                    fill: 'transparent'\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            // desktop listeners\r\n            if (!this.isMobile) {\r\n                // add resize listeners\r\n                if (this.mOptions.resize) {\r\n                    this.addPanListener(this.$refs.resizeTopLeft, {\r\n                        width: true,\r\n                        height: true,\r\n                        x: true,\r\n                        y: true,\r\n                        angle: false\r\n                    }, {invertX: true, invertY: true}, 'resize');\r\n                    this.addPanListener(this.$refs.resizeTop, {\r\n                        width: false,\r\n                        height: true,\r\n                        x: false,\r\n                        y: true,\r\n                        angle: false\r\n                    }, {invertX: false, invertY: true}, 'resize');\r\n                    this.addPanListener(this.$refs.resizeTopRight, {\r\n                        width: true,\r\n                        height: true,\r\n                        x: false,\r\n                        y: true,\r\n                        angle: false\r\n                    }, {invertX: false, invertY: true}, 'resize');\r\n                    this.addPanListener(this.$refs.resizeRight, {\r\n                        width: true,\r\n                        height: false,\r\n                        x: false,\r\n                        y: false,\r\n                        angle: false\r\n                    }, {invertX: false, invertY: false}, 'resize');\r\n                    this.addPanListener(this.$refs.resizeBottomRight, {\r\n                        width: true,\r\n                        height: true,\r\n                        x: false,\r\n                        y: false,\r\n                        angle: false\r\n                    }, {invertX: false, invertY: false}, 'resize');\r\n                    this.addPanListener(this.$refs.resizeBottom, {\r\n                        width: false,\r\n                        height: true,\r\n                        x: false,\r\n                        y: false,\r\n                        angle: false\r\n                    }, {invertX: false, invertY: false}, 'resize');\r\n                    this.addPanListener(this.$refs.resizeBottomLeft, {\r\n                        width: true,\r\n                        height: true,\r\n                        x: true,\r\n                        y: false,\r\n                        angle: false\r\n                    }, {invertX: true, invertY: false}, 'resize');\r\n                    this.addPanListener(this.$refs.resizeLeft, {\r\n                        width: true,\r\n                        height: false,\r\n                        x: true,\r\n                        y: false,\r\n                        angle: false\r\n                    }, {invertX: true, invertY: false}, 'resize');\r\n                }\r\n                // add rotate listener\r\n                if (this.mOptions.rotate) {\r\n                    this.addPanListener(this.$refs.rotateTopLeft, {\r\n                        width: false,\r\n                        height: false,\r\n                        x: false,\r\n                        y: false,\r\n                        angle: true\r\n                    }, {}, 'rotate');\r\n                    this.addPanListener(this.$refs.rotateTopRight, {\r\n                        width: false,\r\n                        height: false,\r\n                        x: false,\r\n                        y: false,\r\n                        angle: true\r\n                    }, {}, 'rotate');\r\n                    this.addPanListener(this.$refs.rotateBottomLeft, {\r\n                        width: false,\r\n                        height: false,\r\n                        x: false,\r\n                        y: false,\r\n                        angle: true\r\n                    }, {}, 'rotate');\r\n                    this.addPanListener(this.$refs.rotateBottomRight, {\r\n                        width: false,\r\n                        height: false,\r\n                        x: false,\r\n                        y: false,\r\n                        angle: true\r\n                    }, {}, 'rotate');\r\n                }\r\n                // add move listener\r\n                if (this.mOptions.move) {\r\n                    this.addPanListener(this.$refs.move, {\r\n                        width: false,\r\n                        height: false,\r\n                        x: true,\r\n                        y: true,\r\n                        angle: false\r\n                    }, {invertX: false, invertY: false}, 'move');\r\n                }\r\n                // register hover events\r\n                this.managers.forEach(manager => {\r\n                    manager.element.addEventListener('mouseenter', function () { this.hoverStart(manager.name); }.bind(this));\r\n                    manager.element.addEventListener('mouseleave', function () { this.hoverEnd(manager.name); }.bind(this));\r\n                });\r\n            }\r\n            // mobile listeners\r\n            else {\r\n                // register move, resize listeners on move element\r\n                const recognizers = [];\r\n                if (this.mOptions.move) recognizers.push([Hammer.Pan, { direction: Hammer.DIRECTION_ALL }]);\r\n                if (this.mOptions.resize) recognizers.push([Hammer.Pinch]);\r\n                recognizers.push([Hammer.Press]);\r\n                const moveResizeManager = new Hammer.Manager(this.$refs.move, { recognizers });\r\n                // move\r\n                if (this.mOptions.move) {\r\n                    moveResizeManager.on('panstart', function () {\r\n                        this.inProgress = true;\r\n                        this.action = 'move';\r\n                    }.bind(this));\r\n                    moveResizeManager.on('panmove', function (e) {\r\n                        // calculate actual delta\r\n                        const deltaX = e.srcEvent.movementX;\r\n                        const deltaY = e.srcEvent.movementY;\r\n\r\n                        // prepare output\r\n                        const newValue = {\r\n                            width: this.value.width,\r\n                            height: this.value.height,\r\n                            x: this.value.x + deltaX,\r\n                            y: this.value.y + deltaY,\r\n                            angle: this.value.angle\r\n                        };\r\n                        // emit event\r\n                        this.$emit('input', newValue);\r\n                    }.bind(this));\r\n                    moveResizeManager.on('panend', function () {\r\n                        this.inProgress = false;\r\n                        this.action = null;\r\n                        this.$emit('changed');\r\n                    }.bind(this));\r\n                }\r\n                // resize\r\n                if (this.mOptions.resize) {\r\n                    moveResizeManager.on('pinchstart', function (e) {\r\n                        this.inProgress = true;\r\n                        this.action = 'resize';\r\n                        this.prevDeltaX = e.deltaX;\r\n                        this.prevDeltaY = e.deltaY;\r\n                    }.bind(this));\r\n                    moveResizeManager.on('pinch', function (e) {\r\n                        const newValue = {\r\n                            width: this.value.width + (e.deltaX - this.prevDeltaX),\r\n                            height: this.value.height + (e.deltaY - this.prevDeltaY),\r\n                            x: this.value.x,\r\n                            y: this.value.y,\r\n                            angle: this.value.angle\r\n                        };\r\n                        this.prevDeltaX = e.deltaX;\r\n                        this.prevDeltaY = e.deltaY;\r\n                        // emit event\r\n                        this.$emit('input', newValue);\r\n                    }.bind(this));\r\n                    moveResizeManager.on('pinchend', function () {\r\n                        this.inProgress = false;\r\n                        this.action = null;\r\n                        this.prevDeltaX = 0;\r\n                        this.prevDeltaY = 0;\r\n                        this.$emit('changed');\r\n                    }.bind(this));\r\n                }\r\n                // press\r\n                moveResizeManager.on('press', function (e) {\r\n                    this.onContextMenu(e.srcEvent);\r\n                }.bind(this));\r\n                // add manager to array\r\n                this.managers.push(moveResizeManager);\r\n                // register rotate listener\r\n                if (this.mOptions.rotate) {\r\n                    this.addPanListener(this.$refs.rotateMobile, {width: false,  height: false,  x: false,   y: false,   angle: true}, {}, 'rotate');\r\n                }\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            // remove listeners\r\n            this.managers.forEach(m => {this.removeListeners(m)});\r\n        },\r\n        methods: {\r\n            addPanListener(element, changes, mOptions, name) {\r\n                // create hammer manager\r\n                const manager = new Hammer.Manager(element, {recognizers: [[Hammer.Pan]]});\r\n                // register event listeners\r\n                manager.on('panstart', function (e) {\r\n                    this.inProgress = true;\r\n                    this.action = name;\r\n                    this.prevAngle = changes.angle ? _getAngle(e.srcEvent, this.$refs.mrr.getBoundingClientRect()) : 0;\r\n                }.bind(this));\r\n                manager.on('panmove', function (e) {\r\n                    // calculate actual delta\r\n                    const deltaX = e.srcEvent.movementX;\r\n                    const deltaY = e.srcEvent.movementY;\r\n                    let deltaAngle = 0;\r\n                    let newAngle = this.value.angle;\r\n                    // calculate change in angle\r\n                    if (changes.angle) {\r\n                        const angle = _getAngle(e.srcEvent, this.$refs.mrr.getBoundingClientRect());\r\n                        deltaAngle = angle - this.prevAngle;\r\n                        this.prevAngle = angle;\r\n                        if (e.srcEvent.shiftKey) {\r\n                            let tmpAngle = Math.round(this.realAngle + deltaAngle);\r\n                            this.realAngle = tmpAngle;\r\n                            if (tmpAngle === (Math.round(tmpAngle / 10) * 10)) {\r\n                                newAngle = tmpAngle;\r\n                            } else {\r\n                                newAngle = this.value.angle;\r\n                            }\r\n                        } else {\r\n                            newAngle = Math.round(this.value.angle + deltaAngle);\r\n                            this.realAngle = newAngle;\r\n                        }\r\n                    }\r\n                    \r\n                    // prepare output\r\n                    const newValue = {\r\n                        width: changes.width ? (mOptions.invertX ? this.value.width - deltaX : this.value.width + deltaX) : this.value.width,\r\n                        height: changes.height ? (mOptions.invertY ? this.value.height - deltaY : this.value.height + deltaY) : this.value.height,\r\n                        x: changes.x ? this.value.x + deltaX : this.value.x,\r\n                        y: changes.y ? this.value.y + deltaY : this.value.y,\r\n                        angle: newAngle\r\n                    };\r\n                    // emit event\r\n                    this.$emit('input', newValue);\r\n                }.bind(this));\r\n                manager.on('panend', function () {\r\n                    this.inProgress = false;\r\n                    this.action = null;\r\n                    this.$emit('changed');\r\n                }.bind(this));\r\n                // push name to manager\r\n                manager.name = name;\r\n                // add manager to array\r\n                this.managers.push(manager);\r\n            },\r\n            removeListeners(manager) {\r\n                for (let handler of manager.handlers) {\r\n                    manager.remove(handler);\r\n                }\r\n                manager.destroy();\r\n            },\r\n            hoverStart(name) {\r\n                if (!this.inProgress && this.action !== name) this.action = name;\r\n            },\r\n            hoverEnd() {\r\n                if (!this.inProgress) this.action = null;\r\n            },\r\n            onContextMenu(e) {\r\n                if (this.$listeners.contextmenu) {\r\n                    e.preventDefault();\r\n                    this.$emit('contextmenu', e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    $opacity-transparent: 0;\r\n    $opacity-light: .2;\r\n    $opacity-medium: .4;\r\n    $opacity-hard: .8;\r\n    $duration: .25s;\r\n    .mrr-tool {\r\n        position: absolute;\r\n        display: block;\r\n        stroke: aqua;\r\n        touch-action: none;\r\n    }\r\n    .mrr-tool-move {\r\n        cursor: move;\r\n        transition: opacity $duration;\r\n    }\r\n    .mrr-tool-resize {\r\n        transition: opacity $duration;\r\n        &.resize-diagonal {\r\n            &.nwse {\r\n                cursor: nwse-resize;\r\n            }\r\n            &.nesw {\r\n                cursor: nesw-resize;\r\n            }\r\n        }\r\n        &.resize-vertical {\r\n            cursor: ns-resize;\r\n        }\r\n        &.resize-horizontal {\r\n            cursor: ew-resize;\r\n        }\r\n    }\r\n    .mrr-tool-rotate {\r\n        cursor: move;\r\n        transition: opacity $duration;\r\n        &.guide {\r\n            opacity: $opacity-light;\r\n            stroke-dasharray: 2px, 6px;\r\n            transition: stroke-dasharray $duration, opacity $duration;\r\n        }\r\n    }\r\n    .mrr-tool-action {\r\n        text-transform: uppercase;\r\n        pointer-events: none;\r\n    }\r\n    // special cases\r\n    .mrr-tool[data-action=\"rotate\"] {\r\n        .mrr-tool-rotate.guide { \r\n            opacity: $opacity-medium;\r\n            stroke-dasharray: 2px, 2px;\r\n        }\r\n        .mrr-tool-move, .mrr-tool-resize {\r\n            opacity: $opacity-medium;\r\n        }\r\n        &[data-in-progress=\"true\"] {\r\n            .mrr-tool-rotate.guide {\r\n                opacity: $opacity-hard;\r\n            }\r\n            .mrr-tool-move {\r\n                opacity: $opacity-light;\r\n            }\r\n            .mrr-tool-resize {\r\n                opacity: $opacity-transparent;\r\n            }\r\n        }\r\n    }\r\n    .mrr-tool[data-action=\"move\"] {\r\n        .mrr-tool-rotate { \r\n            opacity: $opacity-medium;\r\n        }\r\n        .mrr-tool-resize {\r\n            opacity: $opacity-medium;\r\n        }\r\n        &[data-in-progress=\"true\"] {\r\n            .mrr-tool-rotate {\r\n                &:not(.guide) {\r\n                    opacity: $opacity-transparent;\r\n                }\r\n            }\r\n            .mrr-tool-resize {\r\n                opacity: $opacity-transparent;\r\n            }\r\n        }\r\n    }\r\n    .mrr-tool[data-action=\"resize\"] {\r\n        .mrr-tool-rotate { \r\n            opacity: $opacity-medium;\r\n        }\r\n        .mrr-tool-move {\r\n            opacity: $opacity-medium;\r\n        }\r\n        &[data-in-progress=\"true\"] {\r\n            .mrr-tool-rotate {\r\n                opacity: $opacity-transparent;\r\n            }\r\n            .mrr-tool-move {\r\n                opacity: $opacity-light;\r\n            }\r\n        }\r\n    }\r\n    // transition\r\n    .fade-enter-active, .fade-leave-active {\r\n        transition: opacity ($duration * 2);\r\n    }\r\n    .fade-enter, .fade-leave-to {\r\n        opacity: 0;\r\n    }\r\n</style>","import mod from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./MrrTool.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./MrrTool.vue?vue&type=script&lang=js\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./MrrTool.vue?vue&type=template&id=302d7bf8&scoped=true\"\nimport script from \"./MrrTool.vue?vue&type=script&lang=js\"\nexport * from \"./MrrTool.vue?vue&type=script&lang=js\"\nimport style0 from \"./MrrTool.vue?vue&type=style&index=0&id=302d7bf8&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"302d7bf8\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/index.js??ref--8-oneOf-1-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./MrrTool.vue?vue&type=style&index=0&id=302d7bf8&scoped=true&lang=scss\"; export default mod; export * from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/index.js??ref--8-oneOf-1-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./MrrTool.vue?vue&type=style&index=0&id=302d7bf8&scoped=true&lang=scss\"","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}